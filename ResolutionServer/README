Build instructions:

gcc version 3 is required.
python development environment is required.
java development environment is required.

1) Make sure all the "salsa" modules are checked out.  "cvs checkout
salsa" should do this.
OR
Unpack files from Salsa-xxx.tgz distribution.

2) Install Charm (charm.cs.uiuc.edu).  Note that you will need Charm++ 6.2.0
or later.

Build "LIBS" in the charm distribution to be sure all the needed modules are
compiled.

Set the CHARM_DIR environment variable to point at the source directory
for Charm.

3) "cd ../InteractiveClient; make" to compile the Java client.

4) If your linux distribution does not have boost installed, unpack (but no
need to build) boost (www.boost.org) in the parent directory.

    wget http://puzzle.dl.sourceforge.net/sourceforge/boost/boost_1_33_0.tar.gz

5) If your linux distribution does not have xerces-c installed, install and
build the Apache Xerces C++ XML Parser (xml.apache.org) in the parent directory.
Set the XERCESCROOT environment variable to point at this directory.

    wget ftp://www.ibiblio.org/pub/mirrors/apache/xml/xerces-c/source/xerces-c-src_2_7_0.tar.gz
    export XERCESCROOT=<full path to xerces-c-src2_7_0>
    cd $XERCESCROOT/src/xercesc
    autoconf
    runConfigure -plinux -cgcc -xg++ -minmem -nsocket -tnative -rpthread
    gmake

6) Type "configure" in the ResolutionServer directory.  Hopefully this will find
everything. 

Type "make"

7) Type "configure" and "make" in the CommandClient directory for the command 
line based client.

To run:

"Run_Salsa.sh" will run a demonstration on the localhost

See "run_server.sh" for an example command line for the server.  Note that
the server can be run on a remote host.

To start the client, use "java -jar ../InteractiveClient/Salsa.jar
HOSTNAME PORT_NUMBER" where these are printed out by the server.

There is a script "Salsa.sh" which will attempt to run the server, the GUI and the
command client.  The variable BINDIR needs to be set to point at where all the
executables are located.

--------------------
Using Salsa on a batch queue system (eg. PBS):

As an example here is how to get Salsa going on Lemieux at PSC.

Running: "qsub -I -l rmsnodes=16:64 -l walltime=00:30:00" will get an
interactive session.  When the session begins start up
ResolutionServer with the usual charm command: "charmrun +p 64
ResolutionServer ++server file".  Note the IP address and port number
reported.  An ssh tunnel needs to be set up to this port through the
lemieux front end.  "ssh -L<lport>:<IP>:<port> lemieux.psc.edu" on
your desktop will set this up, where <IP>:<port> are what is reported
by ResolutionServer and <lport> will be used locally.  Start the
client with "java -jar Salsa.jar localhost <lport> filename" to
connect to this tunnel.  The filename is relative to where charmrun
is started on lemieux.

--------------------
ISSUES:

There seems to be a bug in gcc version 4.0 and later that causes problems
with the image display.  The upshot is that only z-axis view are displayed
correctly.

On Tru64 machines xerces-c v. 2.7.0 has a memory allocation bug that
causes segmentation faults.  Here is a patch:
===================================================================
RCS file: src/xercesc/util/Platforms/Tru64/RCS/Tru64PlatformUtils.cpp,v
retrieving revision 1.1
diff -u -r1.1 src/xercesc/util/Platforms/Tru64/Tru64PlatformUtils.cpp
--- 1.1 2006/08/17 22:36:32
+++ src/xercesc/util/Platforms/Tru64/Tru64PlatformUtils.cpp
2006/08/18 18:06:30
@@ -418,7 +418,7 @@
 //
-----------------------------------------------------------------------
 
 
-class  RecursiveMutex
+class  RecursiveMutex : public XMemory
 {
 public:
   pthread_mutex_t   mutex;
